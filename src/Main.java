import service.HotelService;
import util.CSV;

import java.sql.SQLException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        HotelService hotelService = new HotelService();

        System.out.println("HOTEL MANAGEMENT SYSTEM");
        Scanner scanner = new Scanner(System.in);

        boolean over = false;
        while (!over) {
            System.out.println("Choose your operation:");
            System.out.println("1 - Make a Reservation");
            System.out.println("2 - Cancel a Reservation");
            System.out.println("3 - Extend a Reservation");
            System.out.println("4 - Display a List of Available Rooms for a Time Range");
            System.out.println("5 - Add Client");
            System.out.println("6 - Check Room Availability for a Time Range");
            System.out.println("7 - Display a List of Guests Checked In");
            System.out.println("8 - Display all negative reviews");
            System.out.println("9 - Check Total Revenue generated by the hotel for a specific time range");
            System.out.println("10 - Check employee salary increase");
            System.out.println("0 - Exit");

            String query = scanner.nextLine();

            switch (query) {
                case "0":
                    over = true;
                    System.out.println("Exiting...");
                    break;
                case "1":
                    try {
                        HotelService.makeReservation();
                        CSV.CSVFile("Reservation Made");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "2":
                    try {
                        hotelService.cancelReservation();
                        CSV.CSVFile("Reservation Canceled");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "3":
                    try {
                        hotelService.extendReservation();
                        CSV.CSVFile("Reservation Extended");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "4":
                    try {
                        hotelService.displayAvailableRooms();
                        CSV.CSVFile("Rooms Shown");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "5":
                    try {
                        hotelService.addClient();
                        CSV.CSVFile("Client Added");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "6":
                    try {
                        hotelService.checkRoomAvailability();
                        CSV.CSVFile("Room Availability Check");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "7":
                    try {
                        hotelService.displayGuestsCheckedIn();
                        CSV.CSVFile("Guests Checked In Verification");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "8":
                    try {
                        hotelService.displayNegativeReviews();
                        CSV.CSVFile("Displayed negative reviews");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "9":
                    try {
                        hotelService.checkTotalRevenue();
                        CSV.CSVFile("Total revenue checked");
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "10":
                    try {
                        hotelService.checkEmployeeSalaryIncreaseEligibility();
                    } catch (SQLException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                default:
                    System.out.println("Invalid query! Try again!");
                    break;
            }

            System.out.println("Press Enter to continue...");
            scanner.nextLine();
        }
    }
}